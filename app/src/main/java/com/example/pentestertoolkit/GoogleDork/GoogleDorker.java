package com.example.pentestertoolkit.GoogleDork;

import android.os.AsyncTask;
import android.util.Log;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;

public class GoogleDorker extends AsyncTask<Void, Void, ArrayList<String>> {

    private ArrayList<String> all_scraped_links;

    private GoogleDorkerCallback googleDorkerCallback;

    private String search_query;

    private int search_index;

    public GoogleDorker(GoogleDorkerCallback googleDorkerCallback, String search_query){
        this.googleDorkerCallback = googleDorkerCallback;
        this.search_query = search_query;
        this.search_index = 1;
    }


    @Override
    protected ArrayList<String> doInBackground(Void... voids) {
        return retrieveDorkResults(search_query);

    }

    @Override
    protected void onPostExecute(ArrayList<String> strings) {
        if (googleDorkerCallback != null)
            googleDorkerCallback.onGoogleDorkResult(all_scraped_links);
    }

    private ArrayList<String> retrieveDorkResults(String query){

        all_scraped_links = new ArrayList<>();

        while(true){

                if(scrapeGoogleSearchedLinks(query, search_index))
                    break;

        }



        Log.i("ALL SCRAPED LINKS: ", all_scraped_links.size() + "");

        return  all_scraped_links;
    }

    private boolean scrapeGoogleSearchedLinks(String query, int search_index){

        try {
            Log.i("SEARCH_INDEX", search_index + "");

            String GOOGLE_SEARCH_URL = "https://www.google.com.pk/search?q=" + query + "&start=" + search_index;

            Document search_document = null;

            search_document = Jsoup.connect(GOOGLE_SEARCH_URL).get();


            Elements searched_links_divs = search_document.getElementsByClass("yuRUbf");

            if (searched_links_divs.size() == 0)
                return true; //stop search


            for (Element link_div : searched_links_divs) {

                String link = link_div.getElementsByTag("a").attr("href");

                if (!all_scraped_links.contains(link)) {
                    all_scraped_links.add(link);

                } else {

                    Log.i("DUPLICATED LINK DORK: ", link);

                }

                this.search_index += 1;

                Log.i("LINK", link);

            }

        }catch (Exception e){
            Log.i("DORK ERROR", e.getMessage());
            return true;
        }

        return false;
    }


    public interface GoogleDorkerCallback{

        void onGoogleDorkResult(ArrayList<String> scraped_links);

    }

}
