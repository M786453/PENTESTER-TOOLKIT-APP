package com.example.pentestertoolkit.SiteMapper;

import android.os.AsyncTask;
import android.util.Log;
import android.widget.LinearLayout;

import androidx.annotation.NonNull;

import com.example.pentestertoolkit.Global.HttpData;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

public class AutomatedSiteMapGenerator extends AsyncTask<Void, Void, Void> {

    private String site_url;

    private SiteMapCallback siteMapCallback;


    public AutomatedSiteMapGenerator(SiteMapCallback siteMapCallback, String site_url){

        this.site_url = site_url;

        this.siteMapCallback = siteMapCallback;


    }

    @Override
    protected Void doInBackground(Void... voids) {

        scrapeLinks(site_url);

        return null;
    }

    @Override
    protected void onPostExecute(Void unused) {
        if (siteMapCallback != null)
            siteMapCallback.OnSiteMapGenerated();
    }

    private void scrapeLinks(String url_str){


        try{

            if (!url_str.startsWith("http://") || !url_str.startsWith("https://")){
                url_str = "http://" + url_str;
            }

            System.out.println("Scrapping the url: " + url_str);

            Document site_doc = Jsoup.connect(url_str).get();


            Elements link_elements = site_doc.select("a[href]");

            for (Element link: link_elements){

                String href = link.attr("href");

                if (!href.startsWith("#") && !href.startsWith("mailto:") && !href.startsWith("tel:") && !href.isEmpty()){

                    if (href.contains("http://") || href.contains("https://"))
                        href = href.split("://")[1];

                    if (href.contains("www"))
                        href = href.split("www.")[1];

                    HttpData.linkClassifier.addLink(href);

                }



            }

        }catch (Exception e){
            e.printStackTrace();
        }

    }


    public interface SiteMapCallback{

        void OnSiteMapGenerated();

    }



}
