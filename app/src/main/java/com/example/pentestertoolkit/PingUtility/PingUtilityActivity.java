package com.example.pentestertoolkit.PingUtility;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.pentestertoolkit.Global.CopyText;
import com.example.pentestertoolkit.Global.FileManagement;
import com.example.pentestertoolkit.Hasher.HasherActivity;
import com.example.pentestertoolkit.R;

public class PingUtilityActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_ping_utility);

        getSupportActionBar().hide();


        String TOOL_DIRECTORY_PATH = Environment.getExternalStorageDirectory() + "/PENTESTER TOOLKIT/PingUtility";


        // Initialize UI components
        EditText edtPingUtility = findViewById(R.id.edt_ping_utility);
        ImageView imgSettingsPingUtility = findViewById(R.id.img_settings_ping_utility);
        ImageView imgPingFileSave = findViewById(R.id.imgPingFileSave);
        ImageView imgPingTextCopy = findViewById(R.id.imgPingTextCopy);
        TextView txtPingOutput = findViewById(R.id.txtPingOutput);




        // Ping Functionality

        imgSettingsPingUtility.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String ip_address = edtPingUtility.getText().toString();
                Toast.makeText(PingUtilityActivity.this, "Pinging " + ip_address, Toast.LENGTH_SHORT).show();
                String pingOutput = PingClass.ping(ip_address);
                txtPingOutput.setText(pingOutput);

            }
        });

        // Copy ping output

        imgPingTextCopy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                CopyText.copy(PingUtilityActivity.this, txtPingOutput.getText() + "");
                Toast.makeText(PingUtilityActivity.this, "Copied!", Toast.LENGTH_SHORT).show();
            }
        });

        // Save ping output to a file functionality

        imgPingFileSave.setOnClickListener(new View.OnClickListener() {
            @RequiresApi(api = Build.VERSION_CODES.O)
            @Override
            public void onClick(View view) {

                if(FileManagement.getWritePermission(PingUtilityActivity.this))
                    if(FileManagement.saveFile(txtPingOutput.getText().toString(), TOOL_DIRECTORY_PATH))
                        Toast.makeText(PingUtilityActivity.this, "File Saved!", Toast.LENGTH_SHORT).show();
                    else
                        Toast.makeText(PingUtilityActivity.this, "File not saved.", Toast.LENGTH_SHORT).show();
            }
        });

    }
}