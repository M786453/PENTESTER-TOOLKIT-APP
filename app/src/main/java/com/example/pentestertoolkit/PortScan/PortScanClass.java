package com.example.pentestertoolkit.PortScan;

import android.os.AsyncTask;
import android.os.Handler;
import android.util.Log;

import androidx.annotation.NonNull;

import java.net.InetSocketAddress;
import java.net.Socket;
import java.io.IOException;
import java.net.SocketAddress;
import java.net.SocketTimeoutException;

public class PortScanClass extends AsyncTask<Void, Void, Boolean> {

    private static final String TAG = "PORT_SCAN_CLASS";
    private String host;
    private int port;
    private PortScanCallback portScanCallback;

    public PortScanClass(String host, int port, PortScanCallback portScanCallback){
        this.host = host;
        this.port = port;
        this.portScanCallback = portScanCallback;
    }

    @Override
    protected Boolean doInBackground(Void... voids) {
        return scan(host,port);
    }

    @Override
    protected void onPostExecute(Boolean result) {
        if(portScanCallback != null){
            portScanCallback.onPortScanResult(port, result);
        }
    }

    public boolean scan(String ip_address, int port_number){
        boolean is_port_open;
        try{
            Socket socket = new Socket();
            InetSocketAddress socketAddress = new InetSocketAddress(host,port);
            socket.connect(socketAddress);
            is_port_open = true;
            socket.close();
        }catch (Exception e){
            is_port_open = false;
            e.printStackTrace();
        }

        return is_port_open;
    }


    public interface PortScanCallback {

        void onPortScanResult(int port, boolean isOpen);

    }


}
