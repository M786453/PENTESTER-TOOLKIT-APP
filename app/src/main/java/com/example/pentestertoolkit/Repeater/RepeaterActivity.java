package com.example.pentestertoolkit.Repeater;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.example.pentestertoolkit.R;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.URL;
import java.util.HashMap;

public class RepeaterActivity extends AppCompatActivity {

    private String response = "";
    public static String request = "";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_repeater);

        getSupportActionBar().hide();

        // UI Components
        View pt_btn_pair = findViewById(R.id.req_res_pair);
        TextView btnRequest = pt_btn_pair.findViewById(R.id.txtLeft);
        TextView btnResponse = pt_btn_pair.findViewById(R.id.txtRight);
        EditText edtRepeater = findViewById(R.id.edtRepeater);
        Button btnSendRequest = findViewById(R.id.btnSndReqRepeater);


        // Set text to button pairs

        btnRequest.setText("Request");
        btnResponse.setText("Response");

        // Set RequestDetails to edtRepeater
        if (!request.isEmpty())
            edtRepeater.setText(request);

        // Pair Buttons on click transitions functionality

        btnRequest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                btnRequest.setBackground(getResources().getDrawable(R.drawable.bg_round));
                btnRequest.setTextColor(getResources().getColor(R.color.secondary));
                btnResponse.setBackgroundColor(getResources().getColor(R.color.secondary));
                btnResponse.setTextColor(getResources().getColor(R.color.primary));

                btnRequest.setPadding(10,10,10,10);
                btnResponse.setPadding(10,10,10,10);

                if (request.isEmpty()){
                    edtRepeater.setText(R.string.dummyRequest);
                }else{
                    edtRepeater.setText(request);
                }


            }
        });

        btnResponse.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                btnResponse.setBackground(getResources().getDrawable(R.drawable.bg_round));
                btnResponse.setTextColor(getResources().getColor(R.color.secondary));
                btnRequest.setBackgroundColor(getResources().getColor(R.color.secondary));
                btnRequest.setTextColor(getResources().getColor(R.color.primary));

                btnRequest.setPadding(10,10,10,10);
                btnResponse.setPadding(10,10,10,10);

                if (response.isEmpty()){
                    edtRepeater.setText(R.string.dummyResponse);
                }else{
                    edtRepeater.setText(response);
                }

            }
        });

        //Send Request
        btnSendRequest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {


                    sendRequest(edtRepeater.getText().toString());

            }
        });

    }

    private void sendRequest(String newRequest){
        new Thread(new Runnable() {
            @Override
            public void run() {

                try{

                    // Creating request
                    URL url = new URL(newRequest.split(" ")[1]);
                    HttpURLConnection httpUrlConnection = (HttpURLConnection) url.openConnection();

                    // Set request method
                    httpUrlConnection.setRequestMethod(newRequest.split(" ")[0]);


                    //Set headers to request
                    String[] requestLines = newRequest.split("\n");

                    for(String header : requestLines) {
                        if (header.split(" ")[0].contains(":")) {
                            String header_name = header.split(" ")[0];
                            header_name = header_name.substring(0, header_name.length()-1);
                            String header_value  = header.split(" ")[1];

                            //Setting header to request
                            httpUrlConnection.setRequestProperty(header_name, header_value);
                        }
                    }

                    //Send Request
                    httpUrlConnection.connect();

                    showToast("Request Sent.");

                    //Update the request showcase variable to latest request
                    request = newRequest;


                    //Receive Response
                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(httpUrlConnection.getInputStream()));
                    String l_response = "";
                    String line;
                    while ((line = bufferedReader.readLine()) != null)
                        l_response += line + "\n";

                    showToast("Response Received.");

                    bufferedReader.close();
                    httpUrlConnection.disconnect();

                    //Update Response
                    response = l_response;
                    Log.i("REPEATER_RESPONSE", l_response);


                }catch (Exception e){
                    e.printStackTrace();
                    showToast("Invalid Request.");
                }

            }
        }).start();
    }


    private void showToast(final String message) {
        runOnUiThread(new Runnable() {
            @Override
            public void run() {
                Toast.makeText(RepeaterActivity.this, message, Toast.LENGTH_SHORT).show();
            }
        });
    }




}