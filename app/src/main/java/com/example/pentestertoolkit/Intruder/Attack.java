package com.example.pentestertoolkit.Intruder;

import android.net.Uri;
import android.util.Log;
import android.webkit.WebResourceRequest;

import com.example.pentestertoolkit.Global.HttpCommunication;

import java.util.ArrayList;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Attack {

    private String PAYLOAD_RE;
    private String request;
    private HttpCommunication.HttpCommunicationCallback httpCommunicationCallback;

    public Attack(String request, HttpCommunication.HttpCommunicationCallback httpCommunicationCallback){
        this.request = request;
        this.PAYLOAD_RE = "ยง(.*?)ยง";
        this.httpCommunicationCallback = httpCommunicationCallback;
        // Before starting every attack, recreate the request list of AttackTransactionData
        AttackTransactionsData.requests = new ArrayList<>();
    }

    public void sniper(String[] payloads){

        for (String payload : payloads){

            String modified_request = sniperPayloadPlacer(request, payload);

            HttpCommunication httpCommunication = new HttpCommunication(modified_request, httpCommunicationCallback);

            httpCommunication.sendRequest();

            AttackTransactionsData.requests.add(modified_request);


        }

    }

    private String sniperPayloadPlacer(String request, String payload){

        Pattern pattern = Pattern.compile(PAYLOAD_RE);

        Matcher matcher = pattern.matcher(request);

        return matcher.replaceAll(payload);
    }




}
