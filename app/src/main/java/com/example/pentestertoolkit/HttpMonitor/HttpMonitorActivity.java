package com.example.pentestertoolkit.HttpMonitor;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.example.pentestertoolkit.Global.HttpCommunication;
import com.example.pentestertoolkit.Global.HttpData;
import com.example.pentestertoolkit.Intruder.Attack;
import com.example.pentestertoolkit.Intruder.ConfigureIntrusionActivity;
import com.example.pentestertoolkit.R;
import com.example.pentestertoolkit.SiteMapper.SmBrowser;

import java.util.Locale;

public class HttpMonitorActivity extends AppCompatActivity implements HttpCommunication.HttpCommunicationCallback {

    private HmRvAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_http_monitor);

        getSupportActionBar().hide();

        //UI Components
        RecyclerView hm_rv = findViewById(R.id.hm_recyclerview);
        TextView txtTitle = findViewById(R.id.txtTitleHttpMonitor);


        String attackType = getIntent().getStringExtra("ATTACK");

        if (attackType != null){

            // It means this activity is started from Intruder's section

            txtTitle.setText("ATTACK RESULTS");

            //set adapter for recycler view
            adapter = new HmRvAdapter(false);
            startAttack(getIntent());

        }else{

                // It means this activity is started as HTTP Monitor

            //set adapter for recycler view
            adapter = new HmRvAdapter(true);
        }




        hm_rv.setAdapter(adapter);
        hm_rv.setLayoutManager(new LinearLayoutManager(this));


    }

    private void startAttack(Intent intent){

        try{

            // Get Intent Data
            String attackType = getIntent().getStringExtra("ATTACK");
            String request = getIntent().getStringExtra("REQUEST");
            String[] payloads = getIntent().getStringArrayExtra("PAYLOADS");


            Attack attack = new Attack(request, HttpMonitorActivity.this);

            if (attackType.equals("Sniper")){
                // Notify user
                Toast.makeText(HttpMonitorActivity.this, "Starting Sniper Attack...", Toast.LENGTH_SHORT).show();

                // Execute Sniper Attack
                attack.sniper(payloads);

            }else if (attackType.equals("Pitch Fork")){

                //Notify User
                Toast.makeText(HttpMonitorActivity.this, "Starting Pitch Fork...", Toast.LENGTH_SHORT).show();

                //Execute Pitch Fork Attack
                attack.pitchFork(ConfigureIntrusionActivity.payload_sets_list);

            }else if (attackType.equals("Cluster Bomb")){

                //Notify User
                Toast.makeText(HttpMonitorActivity.this, "Starting Cluster Bomb...", Toast.LENGTH_SHORT).show();

                //Execute Cluster Bomb Attack
                attack.clusterBomb(ConfigureIntrusionActivity.payload_sets_list);

            }

        }catch (Exception e){
            Log.i("HM_ERROR", e.getMessage());
        }

    }


    @Override
    public void onResponseReceived(String mResponse) {
        Log.i("HM", "CALLBACK");
        if (adapter != null){
            adapter.notifyDataSetChanged();
        }
    }
}