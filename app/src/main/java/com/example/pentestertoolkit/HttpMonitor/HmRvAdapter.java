package com.example.pentestertoolkit.HttpMonitor;

import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebResourceRequest;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.pentestertoolkit.Global.HttpCommunication;
import com.example.pentestertoolkit.Global.HttpData;
import com.example.pentestertoolkit.Intruder.AttackTransactionsData;
import com.example.pentestertoolkit.R;

import java.util.ArrayList;
import java.util.Map;

//Recycler View adapter for Http Monitor
public class HmRvAdapter extends RecyclerView.Adapter<HmRvAdapter.HmViewHolder> {

    private boolean isHttpMonitor;
    private ArrayList<WebResourceRequest> requestsList;

    public HmRvAdapter(boolean isHttpMonitor, ArrayList<WebResourceRequest> requestsList){

        this.isHttpMonitor = isHttpMonitor;
        this.requestsList = requestsList;

    }

    @NonNull
    @Override
    public HmViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.http_monitor_listview_item, parent, false);
        return new HmViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull HmViewHolder holder, int position) {

        holder.itemView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(holder.itemView.getContext(), HttpMonitorDetailsActivity.class);
                intent.putExtra("REQUEST", extractRequestDetails(requestsList.get(position)));
                intent.putExtra("REQUEST_INDEX", position);
                intent.putExtra("IS_HTTP_MONITOR",isHttpMonitor);
                holder.itemView.getContext().startActivity(intent);
            }
        });

        if (isHttpMonitor){
            holder.bind(requestsList.get(position));
        }else{
            holder.bind(AttackTransactionsData.requests.get(position));
        }

    }

    @Override
    public int getItemCount() {
        if (isHttpMonitor){
            return requestsList.size();
        }else{
            return AttackTransactionsData.requests.size();
        }
    }

    private String extractRequestDetails(WebResourceRequest request){

        String requestDetails = "";

        requestDetails += request.getMethod() + " " + request.getUrl().toString() + " HTTP/1.1" + "\n";
        requestDetails += "Host: " + request.getUrl().getHost() + "\n";
        for (Map.Entry<String, String> header : request.getRequestHeaders().entrySet()){

            requestDetails += header.getKey() + ": " + header.getValue() + "\n";

        }

        return requestDetails;
    }



    class HmViewHolder extends RecyclerView.ViewHolder{

        private TextView txt_host,txt_url,txt_method;

        public HmViewHolder(View itemView){
            super(itemView);
            txt_host = itemView.findViewById(R.id.txtHostHttpMonitor);
            txt_url = itemView.findViewById(R.id.txtUrlHttpMonitor);
            txt_method = itemView.findViewById(R.id.txtVerbHttpMonitor);
        }

        public void bind(WebResourceRequest request){

            String host = request.getUrl().getHost();

            String method = request.getMethod();

            String url = request.getUrl().toString();

            setText(host, method, url);

        }

        public void bind(String request){

            try {
                String method = request.split(" ")[0];

                String url = HttpCommunication.getRequestUrl(request);


                String host;

                if (request.contains("Host:")){
                    host= request.split("\n")[1].split(": ")[1];
                }
                else{

                    if (url.contains("://")){
                        host = url.split("://")[1].split("/")[0];
                        if (host.contains("www.")){
                            host = host.substring(4);
                        }
                    }else{
                        host = url;
                    }


                }



                setText(host, method, url);

            }catch (Exception e){
                Log.i("HM_ADAPTER_ERR", e.getMessage());
            }

        }


        private void setText(String host, String method, String url){
            txt_host.setText(host);
            txt_method.setText(method);
            txt_url.setText("..." + url.substring(url.length() - 15));
        }
    }
}
