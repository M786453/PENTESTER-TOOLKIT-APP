package com.example.pentestertoolkit.Privacy;

import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.example.pentestertoolkit.Privacy.ProxySection.ProxiesDataClient;
import com.example.pentestertoolkit.Privacy.ProxySection.ProxyListAdapter;
import com.example.pentestertoolkit.R;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;

public class PrivacyActivity extends AppCompatActivity implements ProxiesDataClient.ProxiesDataCallback {


    private ListView proxies_listview;
    private ProgressDialog progressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_privacy);

        getSupportActionBar().hide();

        // Progress Dialog
        progressDialog = new ProgressDialog(PrivacyActivity.this);

        // Initialize UI Components
        View pairButtonsView = findViewById(R.id.button_pair_privacy);
        TextView txtProxy = pairButtonsView.findViewById(R.id.txtLeft);
        TextView txtTor = pairButtonsView.findViewById(R.id.txtRight);
        proxies_listview = findViewById(R.id.proxies_listview);
        LinearLayout linearLayoutProxy = findViewById(R.id.linearlayoutProxy);
        LinearLayout linearLayoutTor = findViewById(R.id.linearlayoutTor);

        // Changing text of button pairs

        txtProxy.setText("PROXY");
        txtTor.setText("TOR");

        // Setting up progress dialog

        progressDialog.setMessage("Loading data...");
        progressDialog.show();

        // Calling ProxiesDataClient

        ProxiesDataClient proxiesDataClient = new ProxiesDataClient(PrivacyActivity.this);
        proxiesDataClient.execute();




        // Pair Buttons on click transitions functionality

        txtProxy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                txtProxy.setBackground(getResources().getDrawable(R.drawable.bg_round));
                txtProxy.setTextColor(getResources().getColor(R.color.secondary));
                txtTor.setBackgroundColor(getResources().getColor(R.color.secondary));
                txtTor.setTextColor(getResources().getColor(R.color.primary));

                txtProxy.setPadding(10,10,10,10);
                txtTor.setPadding(10,10,10,10);

                linearLayoutProxy.setVisibility(View.VISIBLE);
                linearLayoutTor.setVisibility(View.GONE);
            }
        });

        txtTor.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                txtTor.setBackground(getResources().getDrawable(R.drawable.bg_round));
                txtTor.setTextColor(getResources().getColor(R.color.secondary));
                txtProxy.setBackgroundColor(getResources().getColor(R.color.secondary));
                txtProxy.setTextColor(getResources().getColor(R.color.primary));

                txtProxy.setPadding(10,10,10,10);
                txtTor.setPadding(10,10,10,10);

                linearLayoutProxy.setVisibility(View.GONE);
                linearLayoutTor.setVisibility(View.VISIBLE);
            }
        });

    }

    public static String fetch(){

        String GEO_NODE_URL = "https://proxylist.geonode.com/api/proxy-list?limit=500&page=1&sort_by=lastChecked&sort_type=desc";

        String response = "";

        try{


            //Create URL object
            URL url = new URL(GEO_NODE_URL);

            // Open Connection
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();

            conn.setRequestMethod("GET");

            // Get input stream
            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));

            // Read Input stream
            String inputLine;
            while((inputLine = in.readLine()) != null){
                response += inputLine;
            }

            in.close();
//            conn.disconnect();
        }catch (Exception e){
            e.printStackTrace();
        }

        return response;
    }

    @Override
    public void onProxiesDataResult(String proxies_data) {
        try {
            JSONObject proxies_json_object = new JSONObject(proxies_data);
            JSONArray proxies_json_array = proxies_json_object.getJSONArray("data");
            progressDialog.dismiss();
            //Setting adapter
            ProxyListAdapter proxyListAdapter = new ProxyListAdapter(this, proxies_json_array);
            proxies_listview.setAdapter(proxyListAdapter);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}