package com.example.pentestertoolkit.Privacy.ProxySection;

import android.content.Context;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.PopupWindow;
import android.widget.TextView;
import android.widget.Toast;

import com.example.pentestertoolkit.R;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;

public class ProxyListAdapter extends BaseAdapter {

    private JSONArray proxies_json_array;
    private LayoutInflater layoutInflater;
    private ProxyClient.ProxyClientCallback proxyClientCallback;
    private Context context;

    public ProxyListAdapter(ProxyClient.ProxyClientCallback proxyClientCallback, JSONArray proxies_json_array){
        context = (Context) proxyClientCallback;
        this.proxies_json_array = proxies_json_array;
        layoutInflater = LayoutInflater.from(context);
        this.proxyClientCallback = proxyClientCallback;
    }

    @Override
    public int getCount() {
        return proxies_json_array.length();
    }

    @Override
    public Object getItem(int i) {
        try {
            return proxies_json_array.get(i);
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return null;
    }

    @Override
    public long getItemId(int i) {
        return i;
    }

    @Override
    public View getView(int i, View view, ViewGroup parent) {

        if(view == null){
            view = layoutInflater.inflate(R.layout.listitem_privacy, parent, false);
        }

        JSONObject proxy_data = null;
        try {
            proxy_data = (JSONObject) proxies_json_array.get(i);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        //Initialize UI Components
        TextView txtProxyHost = view.findViewById(R.id.txtProxyHost);
        TextView txtProxyPort = view.findViewById(R.id.txtProxyPort);
        TextView txtProxyCountry = view.findViewById(R.id.txtProxyCountry);

        //Set value to UI Components
        try {
            txtProxyHost.setText(proxy_data.get("ip") + "");
            txtProxyPort.setText(proxy_data.get("port") + "");
            txtProxyCountry.setText(proxy_data.get("country") + "");
        }catch (Exception e){
            e.printStackTrace();
        }

        final JSONObject proxy_data_copy = proxy_data;
        // Show popup when list item of proxy listview is clicked
        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                View popupView = layoutInflater.inflate(R.layout.pt_proxy_popup, parent, false);
                PopupWindow proxyPopup = new PopupWindow(popupView, ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);

                //Initialize UI Components
                TextView txtHostProxyPopup = popupView.findViewById(R.id.txtHostProxyPopup);
                TextView txtPortProxyPopup = popupView.findViewById(R.id.txtPortProxyPopup);
                TextView txtCountryProxyPopup = popupView.findViewById(R.id.txtCountryProxyPopup);
                TextView txtProtocolsProxyPopup = popupView.findViewById(R.id.txtProtocolProxyPopup);
                TextView txtAnonymityProxyPopup = popupView.findViewById(R.id.txtAnonymityProxyPopup);
                TextView txtUptimeProxyPopup = popupView.findViewById(R.id.txtUptimeProxyPopup);
                TextView txtLatencyProxyPopup = popupView.findViewById(R.id.txtLatencyProxyPopup);
                TextView txtGoogleProxyPopup = popupView.findViewById(R.id.txtGoogleProxyPopup);
                Button btnConnect = popupView.findViewById(R.id.btnProxyConnect);

                //Set value to UI Components
                try {
                    txtHostProxyPopup.setText(proxy_data_copy.get("ip") + "");
                    txtPortProxyPopup.setText(proxy_data_copy.get("port") + "");
                    txtCountryProxyPopup.setText(proxy_data_copy.get("country") + "");
                    txtProtocolsProxyPopup.setText((proxy_data_copy.getJSONArray("protocols").get(0) + "").toUpperCase());
                    txtAnonymityProxyPopup.setText((proxy_data_copy.get("anonymityLevel") + "").toUpperCase());
                    txtLatencyProxyPopup.setText(Math.round(Float.parseFloat(proxy_data_copy.get("latency")+"") )+ "ms");
                    txtUptimeProxyPopup.setText(Math.round(Float.parseFloat(proxy_data_copy.get("upTime") + "")) + "%");
                    txtGoogleProxyPopup.setText((proxy_data_copy.get("google") + "").toUpperCase());
                }catch (Exception e){
                    e.printStackTrace();
                }
                //Showing popup
                proxyPopup.setFocusable(true);
                proxyPopup.showAtLocation(parent, Gravity.CENTER, 0,0);

                //Connect proxy functionality
                btnConnect.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        try {
                            Toast.makeText(context, "Connecting to " + proxy_data_copy.get("ip") + "", Toast.LENGTH_SHORT).show();
                            ProxyClient proxyClient = new ProxyClient(proxy_data_copy.get("ip") + "", 	Integer.parseInt(proxy_data_copy.get("port") + ""), "https", proxyClientCallback);
                            proxyClient.execute();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        proxyPopup.dismiss();
                    }
                });

            }
        });

        return view;
    }


}
